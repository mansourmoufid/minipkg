.if exists(${LOCALBASE}/bin/curl)
FETCH_USING=		curl
TOOLS_PATH.curl=	${LOCALBASE}/bin/curl
.endif

.if exists(${LOCALBASE}/bin/clang)
CLANGBASE=		${LOCALBASE}
.endif

CPPFLAGS+=		-D__STDC_WANT_LIB_EXT1__=1
CPPFLAGS+=		-D_FORTIFY_SOURCE=1
CFLAGS+=		-fexceptions
CFLAGS+=		-fpic
CFLAGS+=		-Os
CFLAGS+=		-fno-delete-null-pointer-checks
CFLAGS+=		-fno-omit-frame-pointer
CFLAGS+=		-fno-strict-aliasing
.if !empty(PKGSRC_COMPILER:M*clang*)
			# Clang does not support -fno-strict-overflow
.else
CFLAGS+=		-fno-strict-overflow
.endif
CFLAGS+=		-fno-common
CFLAGS+=		-fno-builtin
CFLAGS+=		-fwrapv
CFLAGS+=		-Wno-unused-command-line-argument
CXXFLAGS=		${CFLAGS}
LDFLAGS+=		-Wl,-S
LDFLAGS.Linux+=		-Wl,-Bsymbolic
LDFLAGS.Linux+=		-Wl,-z,now
LDFLAGS.Linux+=		-Wl,-z,relro
LDFLAGS.Linux+=		-Wl,-z,noexecstack
LDFLAGS.Linux+=		-Wl,-z,muldefs
LDFLAGS.Linux+=		-Wl,-z,separate-code
LDFLAGS.Linux+=		-Wl,--as-needed
LDFLAGS.Darwin+=	-Wl,-rpath,${LOCALBASE}
LDFLAGS.Darwin+=	-Wl,-dynamic
LDFLAGS.Darwin+=	-Wl,-bind_at_load
LDFLAGS.Darwin+=	-Wl,-search_paths_first
LDFLAGS.Darwin+=	-Wl,-segprot,__TEXT,rx,rx
LDFLAGS.Darwin+=	-Wl,-segprot,__DATA,rw,rw
LDFLAGS.Darwin+=	-Wl,-segprot,__RODATA,r,r
LDFLAGS.Darwin+=	-Wl,-rename_section,__TEXT,__const,__RODATA,__const
LDFLAGS.Darwin+=	-Wl,-rename_section,__TEXT,__cstring,__RODATA,__cstring
LDFLAGS.Darwin+=	-Wl,-dead_strip_dylibs


SPATCHES=		${PKGSRCDIR}/spatches
LOCALPATCHES=		${PKGSRCDIR}/localpatches

USE_CWRAPPERS=		no
CHECK_FILES=		no
MAKE_JOBS=		4

.PHONY: fix-perm
fix-perm:
	(find ${WRKSRC} -type f | fix-perm.py) || true

post-extract: fix-perm

.PHONY: fix-rpaths
fix-rpaths:
	(find ${WRKDIR}/.destdir | fix-rpath.py ${LOCALBASE}) || true

.PHONY: fix-shebangs
fix-shebangs:
	(find ${WRKDIR}/.destdir | fix-shebang.py) || true

post-install: fix-rpaths fix-shebangs

.PHONY: spatch
spatch:
	(spatch.py ${LOCALPATCHES}/${PKGPATH}/* ${SPATCHES}/* ${WRKSRC}) || true

.if !(defined(SPATCH) && ${SPATCH} == "no")
post-patch: spatch
.endif

CURSES_DEFAULT=			ncurses
READLINE_DEFAULT=		readline

PKG_DEFAULT_OPTIONS=	-debug -nls

PREFER_PKGSRC=			yes
PREFER_NATIVE=			clang gcc

USE_BUILTIN.dl=			yes
USE_BUILTIN.pthread=	yes
PREFER_NATIVE_PTHREADS=	yes

.if ${OPSYS} == "Darwin"
SDKROOT!=			xcrun --sdk macosx --show-sdk-path
OSX_SDK_PATH=			${SDKROOT}
CLANGBASE=			${SDKROOT}/usr
CC!=				xcrun --find clang
CXX!=				xcrun --find clang++
CPPFLAGS+=			-isystem ${SDKROOT}/usr/include
CPPFLAGS+=			-cxx-isystem ${SDKROOT}/usr/include/c++/v1
CXXFLAGS+=			-stdlib=libc++
.endif
